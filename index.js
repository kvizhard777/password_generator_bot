const { Telegraf, Markup } = require('telegraf');
const text = require('./const');
const pass = require('./password');

require('dotenv').config()
const bot = new Telegraf('6398373321:AAG1WMobcr9xD8Z2KKEqzHo3ux_MbvCxxVc');


// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ "/start" –∏ "/help"
bot.start((ctx) => {
    ctx.replyWithHTML( text.startText, Markup.keyboard(['üîê –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å']).resize() );
});
bot.help((ctx) => ctx.replyWithHTML(text.helpText));

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã "/password"
bot.command('password', async (ctx) => {
    await passwordGen(ctx);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å"
bot.hears('üîê –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å', async (ctx) => {
    await passwordGen(ctx);
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–∞—Ä–æ–ª—è
const passwordGen = async (ctx) => {
    await ctx.replyWithHTML(text.passLenText);

    bot.hears(/\d+/, async (ctx) => {
        const passLength = parseInt(ctx.message.text);

        if (passLength < 5) {
            await ctx.replyWithHTML(text.passLenMinText);
        } else if (passLength > 32) {
            await ctx.replyWithHTML(text.passLenMaxText);
        } else {
            await ctx.replyWithHTML(`<b>üîê –í–æ—Ç —Ç–≤–æ–π –ø–∞—Ä–æ–ª—å:</b> <code>${pass.generateRandomPass(passLength)}</code>`);
        }
    });
}

bot.launch();

process.once('SIGINT', () => bot.stop('SIGINT'));
process.once('SIGTERM', () => bot.stop('SIGTERM'));
